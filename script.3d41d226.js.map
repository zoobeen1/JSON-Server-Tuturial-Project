{"version":3,"sources":["js/crud.js","js/script.js"],"names":["BASE_URL","addBook","book","options","method","headers","body","JSON","stringify","fetch","then","res","json","getBooks","resp","getBook","bookId","patchBook","params","putBook","deleteBook"],"mappings":";AA0Ce,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1Cf,MAAMA,EAAW,wBAEjB,SAASC,EAAQC,GACTC,MAAAA,EAAU,CACdC,OAAQ,OACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEhBO,OAAAA,SAAST,UAAkBG,GAASO,KAAKC,GAAOA,EAAIC,QAG7D,SAASC,IACAJ,OAAAA,SAAST,WAAkBU,KAAKI,GAAQA,EAAKF,QAEtD,SAASG,EAAQC,GACRP,OAAAA,SAAST,WAAkBgB,KAAUN,KAAKI,GAAQA,EAAKF,QAGhE,SAASK,EAAUD,EAAQE,GACnBf,MAAAA,EAAU,CACdC,OAAQ,QACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUU,IAEhBT,OAAAA,SAAST,WAAkBgB,IAAUb,GAASO,KAAKC,GAAOA,EAAIC,QAEvE,SAASO,EAAQH,EAAQE,GACjBf,MAAAA,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAkB,eAAA,oBAC3BC,KAAMC,KAAKC,UAAUU,IAEhBT,OAAAA,SAAST,WAAkBgB,IAAUb,GAASO,KAAKC,GAAOA,EAAIC,QAGvE,SAASQ,EAAWJ,GAKXP,OAAAA,SAJQT,WAAkBgB,IACjB,CACdZ,OAAQ,WAEiBM,KAAKC,GAAOA,EAAIC,QAE9B,IAAA,EAAA,CAAEX,QAAAA,EAASc,QAAAA,EAASF,SAAAA,EAAUI,UAAAA,EAAWE,QAAAA,EAASC,WAAAA,GAAlD,QAAA,QAAA;;AC1Cd,aAGD,IAAA,EAAA,EAAA,QAAA,WAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA","file":"script.3d41d226.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'http://localhost:3000';\n//create\nfunction addBook(book) {\n  const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(book),\n  };\n  return fetch(`${BASE_URL}/books`, options).then(res => res.json());\n}\n//read\nfunction getBooks() {\n  return fetch(`${BASE_URL}/books`).then(resp => resp.json());\n}\nfunction getBook(bookId) {\n  return fetch(`${BASE_URL}/books/${bookId}`).then(resp => resp.json());\n}\n//update\nfunction patchBook(bookId, params) {\n  const options = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(params),\n  };\n  return fetch(`${BASE_URL}/books/${bookId}`, options).then(res => res.json());\n}\nfunction putBook(bookId, params) {\n  const options = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(params),\n  };\n  return fetch(`${BASE_URL}/books/${bookId}`, options).then(res => res.json());\n}\n//delete\nfunction deleteBook(bookId) {\n  const url = `${BASE_URL}/books/${bookId}`;\n  const options = {\n    method: 'DELETE',\n  };\n  return fetch(url, options).then(res => res.json());\n}\nexport default { addBook, getBook, getBooks, patchBook, putBook, deleteBook };\n","﻿'use strict';\n// Делаем строгий код. Дальше идет весь код JS-файла\n\nimport API from './crud';\n\n//Create\n// API.addBook({\n//   title: 'Последнее путешествие 3',\n//   author: 'Бернард Куросед',\n//   genres: ['приключения', 'драма'],\n//   rating: '4',\n// });\n\n//Read\n// API.getBook(7);\n// API.getBooks();\n\n//Update\n// API.patchBook(7, {\n//   title: 'Какая-то хрень но обновленная',\n//   rating: '2.38',\n// });\n// API.putBook(7, {\n//   title: 'Какая-то хрень',\n//   author: 'Некий Пень',\n//   genres: ['муть'],\n//   rating: '3.38',\n// });\n\n//Delete\n// API.deleteBook(10);\n"]}